# Generated by Django 5.2.5 on 2025-08-09 12:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('loyalty', '0001_initial'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatConversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_conversations', to='tenants.business')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_conversations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('customer', 'Customer'), ('ai', 'AI Assistant'), ('business', 'Business'), ('system', 'System')], max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_service.chatconversation')),
            ],
        ),
        migrations.CreateModel(
            name='ChurnPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('churn_risk_score', models.FloatField(help_text='Probability of churning (0-1)')),
                ('predicted_at', models.DateTimeField(auto_now_add=True)),
                ('days_since_last_activity', models.IntegerField(blank=True, null=True)),
                ('engagement_score', models.FloatField(blank=True, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='churn_predictions', to='loyalty.customerwallet')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('segment_type', models.CharField(choices=[('demographic', 'Demographic'), ('behavioral', 'Behavioral'), ('value', 'Value-based'), ('churn_risk', 'Churn Risk'), ('custom', 'Custom')], max_length=20)),
                ('criteria', models.TextField(blank=True, help_text='JSON representation of segment criteria', null=True)),
                ('size', models.IntegerField(default=0, help_text='Number of customers in segment')),
                ('avg_spend', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('avg_points', models.IntegerField(blank=True, null=True)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_segments', to='tenants.business')),
            ],
        ),
        migrations.CreateModel(
            name='AIGeneratedOffer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('context_factors', models.TextField(blank=True, help_text='JSON of context factors used for generation', null=True)),
                ('impressions', models.IntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('redemptions', models.IntegerField(default=0)),
                ('is_test_variant', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('control_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test_variants', to='ai_service.aigeneratedoffer')),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_metadata', to='loyalty.offer')),
                ('target_segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_offers', to='ai_service.customersegment')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSegmentMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=1.0, help_text='Membership score/probability (1.0 = 100%)')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to=settings.AUTH_USER_MODEL)),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='ai_service.customersegment')),
            ],
            options={
                'unique_together': {('segment', 'customer')},
            },
        ),
    ]
