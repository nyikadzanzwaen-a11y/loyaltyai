# Generated by Django 5.2.5 on 2025-08-09 12:18

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('minimum_points', models.IntegerField(default=0)),
                ('point_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('special_offers', models.BooleanField(default=False)),
                ('priority_support', models.BooleanField(default=False)),
                ('exclusive_events', models.BooleanField(default=False)),
                ('badge_image', models.ImageField(blank=True, null=True, upload_to='tier_badges/')),
                ('color_code', models.CharField(default='#000000', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_tiers', to='tenants.business')),
            ],
            options={
                'ordering': ['minimum_points'],
            },
        ),
        migrations.CreateModel(
            name='CustomerWallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points_balance', models.IntegerField(default=0)),
                ('lifetime_points', models.IntegerField(default=0)),
                ('oldest_active_points', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_wallets', to='tenants.business')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
                ('current_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='loyalty.loyaltytier')),
            ],
            options={
                'unique_together': {('customer', 'business')},
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('discount', 'Discount'), ('points_multiplier', 'Points Multiplier'), ('free_item', 'Free Item'), ('special_event', 'Special Event'), ('other', 'Other')], default='discount', max_length=20)),
                ('points_required', models.IntegerField(default=0, help_text='Points required to redeem this offer, 0 if not redeemable with points')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('points_multiplier', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('free_item_description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='offer_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='tenants.business')),
                ('specific_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tier_offers', to='loyalty.loyaltytier')),
            ],
        ),
        migrations.CreateModel(
            name='OfferRedemption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('points_used', models.IntegerField(default=0)),
                ('redemption_code', models.CharField(blank=True, max_length=50, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='loyalty.offer')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_redemptions', to='loyalty.customerwallet')),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('earn', 'Earn Points'), ('redeem', 'Redeem Points'), ('expire', 'Points Expired'), ('transfer', 'Points Transfer'), ('bonus', 'Bonus Points'), ('adjustment', 'Manual Adjustment')], max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='loyalty.customerwallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
